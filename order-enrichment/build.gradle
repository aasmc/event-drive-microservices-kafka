import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        gradlePluginPortal()
        maven {
            url = "https://packages.confluent.io/maven/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
}

plugins {
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
}

group = 'ru.aasmc'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven {
        url = "https://packages.confluent.io/maven/"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url = "https://ksqldb-maven.s3.amazonaws.com/maven/"
    }
}

ext {
    set('ksqldbVersion', "0.29.0")
}

dependencies {
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation("io.confluent:kafka-avro-serializer:7.5.2")
    implementation("org.apache.avro:avro:1.11.0")
    implementation ("io.confluent.ksql:ksqldb-api-client:${ksqldbVersion}") {
        exclude group: 'org.slf4j'
    }
    implementation ("io.confluent.ksql:ksqldb-udf:${ksqldbVersion}") {
        exclude group: 'org.slf4j'
    }
    implementation ("io.confluent.ksql:ksqldb-common:${ksqldbVersion}") {
        exclude group: 'org.slf4j'
    }
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
}


tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}


tasks.named('bootBuildImage') {
    imageName = "${project.name}"
    environment = ["BP_JVM_VERSION": "17.*"]
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
